// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SacramentPlanner.Models;

namespace SacramentPlanner.Migrations
{
    [DbContext(typeof(SacramentPlannerContext))]
    [Migration("20190404025820_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentPlanner.Models.Hymn", b =>
                {
                    b.Property<int>("HymnID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HymnNumber");

                    b.Property<string>("HymnTitle");

                    b.Property<int>("MeetingID");

                    b.HasKey("HymnID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentPlanner.Models.Meeting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClosingHymn");

                    b.Property<string>("ClosingPrayer")
                        .IsRequired();

                    b.Property<string>("Conductor")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<int>("HymnID");

                    b.Property<string>("IntermediateSong");

                    b.Property<int>("MemberID");

                    b.Property<int>("OpeningHymn");

                    b.Property<string>("OpeningPrayer")
                        .IsRequired();

                    b.Property<int>("SacramentHymn");

                    b.HasKey("ID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentPlanner.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calling");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("MeetingID");

                    b.HasKey("MemberID");

                    b.HasIndex("MeetingID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("SacramentPlanner.Models.Hymn", b =>
                {
                    b.HasOne("SacramentPlanner.Models.Meeting")
                        .WithMany("Hymns")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SacramentPlanner.Models.Member", b =>
                {
                    b.HasOne("SacramentPlanner.Models.Meeting")
                        .WithMany("Members")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
